// in App.js
    
    //import axios
    // return the Header, battleConsole and Footer

//in Header

    //Basic Styling with title and a brief description of how to use the site.

// in battleConsole

    //create an array with the id's of the pokemon I am going to add to the game.
    //create a class to make the pokemon objects / type matchups (In the process of learning about this)
    //Loop through the array of id's to make axios calls to get the data about each of the pokemon in the game. 
    //using the Pokemon class create an Object for each of the pokemon with its stats, type, sprite, moves etc. 

    //pass all of this data down as props the the Battlefield and moveButtons components so they can use them.

//in battlefield 

    //This is where all of the logic for the game is going to happen, this will likely take me a bit of time messing around with react to figure out how some of these steps are going to look in practice. 
    //on startup the user will be prompted to select a pokemon. This could work by having an overlay on top of the screen with some buttons and a carousel with the images of the pokemon, once the user selects the pokemon the overlay will be set to display none, and it wont be viewable anymore. 
    //Once that decision has been made, the computer will select a pokemon at random, this will likely be done by using Math.random and Math.floor to select a number between 1 and the maximum amount of pokemon that are available
    //Once those two choices have been made, the battlefield component will pass the data of the selected pokemon to the Opponent and User components to display the sprites and health. 
    //The functions for winning or losing will also likely be here, and passed as props to the Opponent and User components. 

    //When a move is selected. 
        //When a move is selected from the moveButtons component, the event will be triggered here most likely. 
        //There will be a move function which effects the opposite users pokemon, likely doing a little math to figure out how much damage is done, and then subtracting that from the health of the opponents pokemon. 


//in moveButtons 

    //These buttons will likely be controlled by functions passed down with props, that when called will get passed down to the battlefield component and the logic will happen there.

//in footer

    //some simple made by with links to github/linkedin etc. 

    

